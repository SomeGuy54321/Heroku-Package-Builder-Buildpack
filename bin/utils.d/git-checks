#!/usr/bin/env bash


function git_reset_linuxbrew() {
    puts-step "Updating git repo"
    git --git-dir="$BUILD_DIR/.linuxbrew/.git" reset --hard $LINUXBREW_COMMIT |& indent |& brew_quiet
}


function git_gc_linuxbrew() {
    puts-step "Auto-optimizing git repo"
    git --git-dir="$BUILD_DIR/.linuxbrew/.git" gc --auto |& indent |& brew_quiet
}


function git_remedy_linuxbuild() {
    REMEDY_NUM=$1
    case $REMEDY_NUM in
    0) git --git-dir="$BUILD_DIR/.linuxbrew/.git" init
    ;;
    1) git --git-dir="$BUILD_DIR/.linuxbrew/.git" add origin https://github.com/Linuxbrew/brew.git
    ;;
    2) git --git-dir="$BUILD_DIR/.linuxbrew/.git" checkout -f master
       git --git-dir="$BUILD_DIR/.linuxbrew/.git" stash clear
    ;;
    3) rm -rf "$BUILD_DIR/.linuxbrew/.git/refs"
       git --git-dir="$BUILD_DIR/.linuxbrew/.git" remote set-url origin https://github.com/Linuxbrew/brew.git
       git --git-dir="$BUILD_DIR/.linuxbrew/.git" git fetch
       git --git-dir="$BUILD_DIR/.linuxbrew/.git" git pull origin master
    ;;
    *) puts-warn "Unable to run regular git checks. This build will probably fail."
        export KEEP_TRYING=0
       return 0
    ;;
    esac
}


function git_commit_check() {
    set +e
    export KEEP_TRYING=1
    REMEDY_NUM_GC=0
    REMEDY_NUM_RESET=0
    #LINUXBREW_CURRENT_COMMIT="$(git --git-dir="$BUILD_DIR/.linuxbrew/.git" show --oneline -s | cut -d' ' -f1)"
    LINUXBREW_CURRENT_COMMIT="$(git rev-parse --verify HEAD)"
    if [[ "$LINUXBREW_CURRENT_COMMIT" != "$LINUXBREW_COMMIT" ]]; then
        while [ $KEEP_TRYING -gt 0 ]; do

            git_reset_linuxbrew
            if [ $? -gt 0 ]; then git_remedy_linuxbuild $REMEDY_NUM_RESET; fi
            REMEDY_NUM_RESET=$(( $REMEDY_NUM_RESET + 1 ))

            git_gc_linuxbrew
            if [ $? -gt 0 ]; then git_remedy_linuxbuild $REMEDY_NUM_GC; fi
            REMEDY_NUM_GC=$(( $REMEDY_NUM_GC + 1 ))

        done
    fi
    unset KEEP_TRYING REMEDY_NUM_GC REMEDY_NUM_RESET
    set -e
}
