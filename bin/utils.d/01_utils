#!/usr/bin/env bash

shopt -s extglob
[ $(uname) == "Darwin" ] && SED_FLAG='-l' || SED_FLAG='-u'

# this should hopefully put the adjacent bin directory in the path when this is sourced
export ORIG_PATH=$PATH
export PATH="$(dirname $BASH_SOURCE)/bin:$PATH"
#echo $PATH

# Syntax sugar.
indent() {
    RE='s/^/        /; e countdown;' && \
    sed ${SED_FLAG} "$RE"            || \
    sed ${SED_FLAG} 's/^/        /'
}

# Buildpack Steps.
function puts-step() {
    RE='s/^/ -----> /; e countdown;' && \
    echo $@ | sed ${SED_FLAG} "$RE"  || \
    echo " -----> $@"
}

# Buildpack Warnings.
function puts-warn() {
    RE='s/^/ !      /; e countdown;' && \
    echo $@ | sed ${SED_FLAG} "$RE"  || \
    echo " !     $@"
}

# Buildpack Commands.
puts-cmd() {
    RE='s/^/      $ /; e countdown;' && \
    echo $@ | sed ${SED_FLAG} "$RE"  || \
    echo "     $ $@"
}

# Waiting for stuff
puts-wait() {
    RE='s/^/ ...... /; e countdown;' && \
    echo $@ | sed ${SED_FLAG} "$RE"  || \
    echo " ..... $@"
}

# Usage: $ set-env key value
function set-env (){
    do-debug "Adding 'export $1=$2' to $PROFILE_PATH"
    echo "export $1=$2" >> ${PROFILE_PATH}
}

# Usage: $ set-default-env key value
function set-default-env (){
    # sets $1 to $2 if $1 isnt already set
    do-debug "Adding 'export $1=\${$1:-$2}' to $PROFILE_PATH"
    echo "export $1=\${$1:-$2}" >> $PROFILE_PATH
}

# Usage: $ set-default-env key value
function un-set-env (){
    do-debug "Adding 'unset $1' to $PROFILE_PATH"
    echo "unset $1" >> $PROFILE_PATH
}

# Does some serious copying.
function deep-cp (){
  find -H $1 -maxdepth 1 -name '.*' -a \( -type d -o -type f -o -type l \) -exec cp -a '{}' $2 \;
  cp -r $1/!(tmp) $2
}

# Does some serious moving.
function deep-mv (){
  deep-cp $1 $2

  rm -fr $1/!(tmp)
  find -H $1 -maxdepth 1 -name '.*' -a \( -type d -o -type f -o -type l \) -exec rm -fr '{}' \;
}


function show_files() {
    VAR="$1"
    do-debug "Contents of $VAR:"
    ls -Flah "${VAR}" |& indent-debug || true
}

# Does some serious copying.
function deep_cp_subdirs(){
    for f in $(ls -A $1); do
        cp -af $f $2 |& indent || true
    done
    unset f
}
