#!/usr/bin/env bash

# says how much time is left
# needs to be in its own script to be re-executed on each sed call
function countdown() {
    local COLOR_PRE=""
    local COLOR_POST=""
    local START_TIME=${BUILD_START_TIME:-$(date +'%s.%N')}
    local CURR_TIME=$(date +'%s.%N')
    #local ELAPSED=$(( $CURR_TIME - $START_TIME ))
    local ELAPSED=$(awk '{printf "%f", $1 - $2}' <<< "$CURR_TIME $START_TIME")
    declare -i ELAPSED_INT=${ELAPSED/.*/}
    declare -i BUILD_MAX_RUNTIME_INT=${BUILD_MAX_RUNTIME/.*/}
    if [ ${ELAPSED_INT:-0} -gt ${BUILD_MAX_RUNTIME_INT:-600} ]; then
        COLOR_PRE='\033[31;1;148m';
        COLOR_POST='\033[39m';
    fi
    local ELAPSED_FMT=$(date --date=@$ELAPSED +'%M:%S.%2N')
#    echo -e " ${COLOR_PRE}[${ELAPSED_FMT}]${COLOR_POST} $(countdown_postpend $1) ${@:2}";
    echo -ne "${COLOR_PRE}[${ELAPSED_FMT}]${COLOR_POST}"
}

function countdown_postpend() {
    case ${1:-0} in
    0)
        echo -n "       "
    ;;
    1)
        echo -n " -----> "
    ;;
    2)
        echo -n " !     "
    ;;
    *)
        echo -n "       "
    ;;
    esac
}

countdown $@
